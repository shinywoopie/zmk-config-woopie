/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    macros {
        Testmacro: Testmacro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp H &kp I &kp S &kp SPACE &kp I &kp S &kp SPACE &kp T &kp E &kp S &kp T &kp I &kp N &kp G &kp SPACE &kp O &kp F &kp SPACE &kp M &kp A &kp C &kp R &kp O &kp SPACE &kp F &kp U &kp N &kp C &kp T &kp I &kp O &kp N &kp DOT &kp DOT &kp DOT>;
            label = "TESTMACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y            &kp U  &kp I         &kp O    &kp P     &kp LEFT_BRACKET
&kp RETURN  &kp A  &kp S  &kp D      &kp F  &kp G        &kp H            &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp TAB     &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N            &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp BACKSPACE
                          &kp LCTRL  &mo 1  &kp SPACE    &kp RIGHT_SHIFT  &mo 2  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp F1   &kp F2   &kp F3    &kp F4  &kp F5       &kp C_PREVIOUS    &kp C_NEXT      &kp UP_ARROW    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp ENTER
&trans     &kp F6   &kp F7   &kp F8    &kp F9  &kp F10      &kp C_PLAY_PAUSE  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT          &kp END          &kp DELETE
&kp LSHFT  &kp F11  &kp F12  &trans    &trans  &mkp RCLK    &kp K_MUTE        &kp PAGE_DOWN   &kp PAGE_UP     &trans             &trans           &trans
                             &kp LGUI  &trans  &kp SPACE    &kp RIGHT_SHIFT   &trans          &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT    &kp CARET         &kp AMPS          &kp ASTRK         &kp LPAR          &kp UNDERSCORE  &kp KP_SUBTRACT
&kp LCTRL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp RA(MINUS)     &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &kp RA(NUMBER_4)  &kp RA(N5)      &kp PIPE2
&kp LSHFT  &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0       &kp RA(NUMBER_6)  &kp RA(N7)        &kp RA(N8)        &kp RA(N9)        &kp RA(N0)      &kp PIPE
                                       &kp LGUI      &trans        &kp SPACE    &kp RIGHT_SHIFT   &trans            &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&Testmacro  &ext_power EP_ON  &ext_power EP_OFF  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
&trans      &trans            &trans             &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
&trans      &trans            &trans             &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                                                 &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        trilayer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
